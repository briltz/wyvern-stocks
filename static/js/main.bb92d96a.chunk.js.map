{"version":3,"sources":["js/Stock.js","js/StockPage.js","js/LearnPage.js","js/NewsPage.js","js/CommunityPage.js","js/CompetePage.js","js/AboutPage.js","js/Navbar.js","js/Home.js","js/App.js","js/serviceWorker.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Stock","props","state","stockChartXValues","stockChartYValues","ticker","this","fetchStock","pointerToThis","console","log","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","setState","class","x","y","type","mode","marker","color","opacity","layout","width","height","title","plot_bgcolor","paper_bgcolor","font","React","Component","StockPage","movingAverage","longMA","search","name","exchange","description","industry","price","change","currency","marketCap","divYield","sector","image","website","ceo","address","volume","pe","yearHigh","yearLow","suggestions","symbols","exchanges","names","comments","comment","comTab","handleChange","bind","handleSubmit","commentChange","mc","style","capColor","yieldColor","toFixed","event","target","value","fetchSuggestions","clearSuggestions","toUpperCase","fetchInfo","fetchFundamentals","fetchComments","setTimeout","preventDefault","res","tick","scale","interval","StockSymbol","movingAverageFunction","longMAFunction","last","longLast","total","longTotal","count","val","shift","length","stockName","stockExchange","stockDescription","stockIndustry","stockCurrency","stockSector","stockWebsite","stockCEO","stockAddress","stockCap","stockPrice","stockChange","stockVolume","stockPe","stockYearHigh","stockYearLow","searchKey","sugSymbols","sugNames","sugExchanges","num","html","onClick","setSearch","found","map","stock","id","className","href","user","postDate","placeholder","onChange","postComment","curTime","Date","toLocaleString","allComments","axios","post","catch","err","error","tab","getComments","getPolls","getThreads","onSubmit","getSuggestions","visible","line","shape","dash","xaxis","src","alt","getCapString","capInfo","yieldInfo","setTab","getTab","LearnPage","basicDefinitions","rm","NewsPage","urls","stockUrls","hotUrls","titles","stockTitles","hotTitles","descriptions","stockDescriptions","hotDescriptions","images","stockImages","hotImages","sources","stockSources","hotSources","content","stockContent","hotContent","searchTerm","searchSort","stockPage","hotPage","prevStockPage","nextStockPage","prevHotPage","nextHotPage","handleSort","handleSearch","term","sort","API_KEY","API_Call2","urlFunction","titleFunction","descriptionFunction","imageFunction","sourceFunction","hoturlFunction","hottitleFunction","hotdescriptionFunction","hotimageFunction","hotsourceFunction","a","q","articles","toggleRead","options","opthtml","o","fetchNews","page","getRecentNews","printStockNav","getOptions","marginLeft","getHotNews","printHotNav","CommunityPage","CompetePage","AboutPage","Navbar","to","Home","App","basename","process","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bb92d96a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Stock.css';\r\nimport Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass Stock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stockChartXValues: [],\r\n            stockChartYValues: [],\r\n            ticker: 'TICKER'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchStock();\r\n    }\r\n\r\n    fetchStock() {\r\n        const pointerToThis = this;\r\n        console.log(pointerToThis);\r\n        const API_KEY = 'FBT0JJG7QAFALPC4';\r\n        let StockSymbol = 'SPY';\r\n        let API_Call = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=' + StockSymbol + '&outputsize=compact&apikey=' + API_KEY;\r\n        let stockChartXValuesFunction = [];\r\n        let stockChartYValuesFunction = [];\r\n\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                console.log(data);\r\n\r\n                for(var key in data['Time Series (Daily)']){\r\n                    stockChartXValuesFunction.push(key);\r\n                    stockChartYValuesFunction.push(data['Time Series (Daily)']\r\n                    [key]['4. close']);\r\n                }\r\n\r\n                pointerToThis.setState({\r\n                    stockChartXValues: stockChartXValuesFunction,\r\n                    stockChartYValues: stockChartYValuesFunction,\r\n                    ticker: 'S&P 500 (SPY Index)'\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"stock\">\r\n                <Plot\r\n                    data={[\r\n                    {\r\n                        x: this.state.stockChartXValues,\r\n                        y: this.state.stockChartYValues,\r\n                        type: 'scatter',\r\n                        mode: 'lines',\r\n                        marker: {color: 'lightgreen', opacity: 0.5}\r\n                    },\r\n                    ]}\r\n                    layout={ \r\n                        {\r\n                            width: 720, \r\n                            height: 440, \r\n                            title: this.state.ticker, \r\n                            plot_bgcolor: 'black', \r\n                            paper_bgcolor: 'black',\r\n                            font: {color: 'white'}\r\n                        } }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stock;","import React from 'react';\r\nimport '../css/Stock.css';\r\nimport Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport axios from 'axios';\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass StockPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stockChartXValues: [],\r\n            stockChartYValues: [],\r\n            movingAverage: [],\r\n            longMA: [],\r\n            ticker: '',\r\n            search: 'aapl',\r\n            name: '',\r\n            exchange: '',\r\n            description: '',\r\n            industry: '',\r\n            price: 0,\r\n            change: 0,\r\n            currency: '',\r\n            marketCap: 0,\r\n            divYield: 0,\r\n            sector: '',\r\n            image: '',\r\n            website: '',\r\n            ceo: '',\r\n            address: '',\r\n            volume: 0,\r\n            pe: 0,\r\n            yearHigh: 0,\r\n            yearLow: 0,\r\n            suggestions: {\r\n                symbols: [],\r\n                exchanges: [],\r\n                names: []\r\n            },\r\n            comments: [],\r\n            comment: '',\r\n            comTab: 'comments'\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.commentChange = this.commentChange.bind(this);\r\n    }\r\n\r\n    yieldColor(y){\r\n        if(y*100 == 0){\r\n            return({color: 'red'});\r\n        }\r\n        else if(y*100 > 5){\r\n            return({color: 'fuchsia'});\r\n        }\r\n        else if(y*100 < 3){\r\n            return({color: 'yellow'});\r\n        }\r\n        else{\r\n            return({color: 'lightgreen'});\r\n        }\r\n    }\r\n\r\n    capColor(mc){\r\n        if (mc>=1000000000000){\r\n            return({color: 'orange'});\r\n        }\r\n        else if (mc>=1000000000){\r\n            return({color: 'fuchsia'});\r\n        }\r\n        else if(mc>=1000000){\r\n            return({color: 'lightgreen'});\r\n        }\r\n        else{\r\n            return({color: 'red'});\r\n        }\r\n    }\r\n\r\n    capInfo(mc){\r\n        if (mc>=1000000000000){\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap over One Trillion. This is a sign of long-term stability and a well established company, however not as much room to grow.</div>);\r\n        }\r\n        else if (mc>=1000000000){\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap over One Billion. This is a sign of good stability, and possibly high growth potential.</div>);\r\n        }\r\n        else if(mc>=1000000){\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap over One Million. This may imply the company is smaller with higher volatility, however there is lots of room to grow.</div>);\r\n        }\r\n        else{\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap under One Million. There is either not enough data to properly determine its market cap, or this particular stock is valued worthless.</div>);\r\n        }\r\n    }\r\n\r\n    yieldInfo(y){\r\n        if(y*100 == 0){\r\n            return(<div style={this.yieldColor(y)}><br />This stock does not pay a dividend.</div>);\r\n        }\r\n        else if(y*100 > 5){\r\n            return(<div style={this.yieldColor(y)}><br />This stock pays a large dividend. This may seem good, but is sometimes not a good sign! Take a look into the company financials to ensure it's earnings are stable.</div>);\r\n        }\r\n        else if(y*100 < 2.5){\r\n            return(<div style={this.yieldColor(y)}><br />This stock pays a fair dividend. Usually safer for long-term holds, however it is on the lower end of dividend return.</div>);\r\n        }\r\n        else{\r\n            return(<div style={this.yieldColor(y)}><br />This stock pays a good dividend. The yield is in the ideal range for a dividend-focused security.</div>);\r\n        }\r\n    }\r\n\r\n    getCapString(mc){\r\n        if (mc>=1000000000000){\r\n            return((mc/1000000000000).toFixed(2) + \"T\");\r\n        }\r\n        else if (mc>=1000000000){\r\n            return((mc/1000000000).toFixed(2) + \"B\");\r\n        }\r\n        else if(mc>=1000000){\r\n            return((mc/1000000).toFixed(2) + \"M\");\r\n        }\r\n        else if(mc >= 1000){\r\n            return((mc/1000).toFixed(2) + \"K\");\r\n        }\r\n        else{\r\n            return(mc);\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({search: event.target.value});\r\n        this.fetchSuggestions(event.target.value);\r\n        if(event.target.value == \"\"){\r\n            this.clearSuggestions();\r\n        }\r\n    }\r\n\r\n    commentChange(event) {\r\n        this.setState({comment: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        this.fetchStock(this.state.search.toUpperCase(), '1y', 4);\r\n        this.fetchInfo(this.state.search);\r\n        this.fetchFundamentals(this.state.search);\r\n        this.fetchComments();\r\n        setTimeout(() => {this.clearSuggestions()}, 500);\r\n        event.preventDefault();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchStock(this.state.search.toUpperCase(), '1y', 4);\r\n        this.fetchInfo(this.state.search);\r\n        this.fetchFundamentals(this.state.search);\r\n        this.fetchComments();\r\n    }\r\n\r\n    fetchComments() {\r\n        fetch('/api/comments')\r\n        .then(res => res.json())\r\n        .then(comments => this.setState({comments}));\r\n    }\r\n\r\n    fetchStock(tick,scale,interval) {\r\n        const pointerToThis = this;\r\n        const S_API_KEY = 'Tpk_9f201d2ba3f446ce89fac4838ac7c820';\r\n        const API_KEY = 'pk_3a655283eb704c92927afdfc45973997';\r\n        let StockSymbol = tick;\r\n        let API_Call = 'https://cloud.iexapis.com/stable/stock/' + StockSymbol + '/chart/' + scale + '?chartCloseOnly=true&sort=asc&chartInterval=' + interval + '&includeToday=true&token=' + API_KEY;\r\n        let stockChartXValuesFunction = [];\r\n        let stockChartYValuesFunction = [];\r\n        let movingAverageFunction = [];\r\n        let longMAFunction = [];\r\n        let last = [];\r\n        let longLast = [];\r\n        let total = 0;\r\n        let longTotal = 0;\r\n        let count = 0;\r\n\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                for(var key in data){\r\n                    stockChartXValuesFunction.push(data[key]['date']);\r\n                    stockChartYValuesFunction.push(data[key]['close']);\r\n                    if(count < 5){\r\n                        last.push(data[key]['close']);\r\n                    }\r\n                    else{\r\n                        last.shift();\r\n                        last.push(data[key]['close']);\r\n                    }\r\n                    if(count < 10){\r\n                        longLast.push(data[key]['close']);\r\n                    }\r\n                    else{\r\n                        longLast.shift();\r\n                        longLast.push(data[key]['close']);\r\n                    }\r\n                    total = 0;\r\n                    for(var val in last){\r\n                        total += last[val];\r\n                    }\r\n                    movingAverageFunction.push(total/last.length);\r\n                    longTotal = 0;\r\n                    for(var val in longLast){\r\n                        longTotal += longLast[val];\r\n                    }\r\n                    longMAFunction.push(longTotal/longLast.length);\r\n                    count++;\r\n                }\r\n\r\n                pointerToThis.setState({\r\n                    stockChartXValues: stockChartXValuesFunction,\r\n                    stockChartYValues: stockChartYValuesFunction,\r\n                    ticker: StockSymbol,\r\n                    movingAverage: movingAverageFunction,\r\n                    longMA: longMAFunction\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    fetchInfo(tick){\r\n        const pointerToThis = this;\r\n        const S_API_KEY = 'Tpk_9f201d2ba3f446ce89fac4838ac7c820';\r\n        const API_KEY = 'pk_3a655283eb704c92927afdfc45973997';\r\n        let StockSymbol = tick;\r\n        let API_Info_Call = 'https://cloud.iexapis.com/stable/stock/' + StockSymbol + '/company?token=' + API_KEY;\r\n        let stockName = '';\r\n        let stockExchange = '';\r\n        let stockDescription = '';\r\n        let stockIndustry = '';\r\n        let stockCurrency = '';\r\n        let stockSector = '';\r\n        let stockWebsite = '';\r\n        let stockCEO = '';\r\n        let stockAddress = '';\r\n\r\n        fetch(API_Info_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                console.log(data);\r\n\r\n                stockName = data['companyName'];\r\n                stockExchange = data['exchange'];\r\n                stockDescription = data['description'];\r\n                stockIndustry = data['industry'];\r\n                stockSector = data['sector'];\r\n                stockWebsite = data['website'];\r\n                stockCEO = data['CEO'];\r\n                stockAddress = data['address'];\r\n                stockCurrency = \"USD\";\r\n\r\n                pointerToThis.setState({\r\n                    name: stockName,\r\n                    exchange: stockExchange,\r\n                    description: stockDescription,\r\n                    industry: stockIndustry,\r\n                    currency: stockCurrency,\r\n                    sector: stockSector,\r\n                    website: stockWebsite,\r\n                    ceo: stockCEO,\r\n                    address: stockAddress\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    fetchFundamentals(tick){\r\n        const pointerToThis = this;\r\n        const S_API_KEY = 'Tpk_9f201d2ba3f446ce89fac4838ac7c820';\r\n        const API_KEY = 'pk_3a655283eb704c92927afdfc45973997';\r\n        let StockSymbol = tick;\r\n        let API_Call = 'https://cloud.iexapis.com/stable/stock/' + StockSymbol + '/quote?token=' + API_KEY;\r\n        let stockCap = '';\r\n        let stockPrice = 0;\r\n        let stockChange = 0;\r\n        let stockVolume = 0;\r\n        let stockPe = 0;\r\n        let stockYearHigh = 0;\r\n        let stockYearLow = 0;\r\n\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                console.log(data);\r\n\r\n                stockCap = data['marketCap'];\r\n                stockPrice = data['latestPrice'];\r\n                stockChange = data['change'];\r\n                stockVolume = data['volume'];\r\n                stockPe = data['peRatio'];\r\n                stockYearHigh = data['week52High'];\r\n                stockYearLow = data['week52Low'];\r\n\r\n                pointerToThis.setState({\r\n                    marketCap: stockCap,\r\n                    price: stockPrice,\r\n                    change: stockChange,\r\n                    volume: stockVolume,\r\n                    pe: stockPe,\r\n                    yearHigh: stockYearHigh,\r\n                    yearLow: stockYearLow\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    clearSuggestions(){\r\n        this.setState({\r\n            suggestions: {\r\n                symbols : [],\r\n                names: [],\r\n                exchanges: []\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchSuggestions(searchKey){\r\n        const pointerToThis = this;\r\n        const S_API_KEY = 'Tpk_9f201d2ba3f446ce89fac4838ac7c820';\r\n        const API_KEY = 'pk_3a655283eb704c92927afdfc45973997';\r\n        let API_Call = 'https://sandbox.iexapis.com/stable/search/' + searchKey + '?token=' + S_API_KEY;\r\n        let sugSymbols = [];\r\n        let sugNames = [];\r\n        let sugExchanges = [];\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                for(var key in data){\r\n                    sugSymbols.push(data[key][\"symbol\"]);\r\n                    sugNames.push(data[key][\"securityName\"]);\r\n                    sugExchanges.push(data[key][\"exchange\"]);\r\n                }\r\n                pointerToThis.setState({\r\n                    suggestions: {\r\n                        symbols: sugSymbols,\r\n                        names: sugNames,\r\n                        exchanges: sugExchanges\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    setSearch(key){\r\n        this.setState({\r\n            search: key\r\n        });\r\n    }\r\n\r\n    getSuggestions(num){\r\n        let html = [];\r\n        if(this.state.suggestions.symbols[0]){\r\n            for(let x = 0; x < num; x++){\r\n                if(this.state.suggestions.symbols[x]){\r\n                html.push(<button class='suggestion' type=\"submit\" onClick={() => {this.setSearch(this.state.suggestions.symbols[x])}}>{this.state.suggestions.exchanges[x]}:{this.state.suggestions.symbols[x]} {\"(\"}{this.state.suggestions.names[x]}{\")\"}</button>);\r\n                }\r\n            }\r\n        }\r\n        return html;\r\n    }\r\n\r\n    getComments() {\r\n        let html = []\r\n        let found = false;\r\n        html.push(<h3>Comments</h3>);\r\n        this.state.comments.map(comment => {\r\n            if(comment.stock == this.state.ticker){\r\n            found = true;\r\n            html.push(<div key={comment.id} className=\"comment\">\r\n                <div>{comment.comment}</div>\r\n                <hr />\r\n            <div className=\"comment-footer\"><a href=\"\">{comment.user}</a><div>{comment.postDate}</div></div>\r\n            </div>);\r\n            }\r\n        });\r\n        if(!found){\r\n            html.push(<div>There are no comments on this stock<br /><br /></div>);\r\n        }\r\n        html.push(<div><textarea type=\"text\" placeholder=\"Enter Comment\" class=\"comment-bar\" onChange={this.commentChange} />\r\n        <button class=\"guide-button\" onClick={() => {this.postComment()}}>Comment</button></div>);\r\n        return html;\r\n    }\r\n\r\n    postComment() {\r\n        let curTime = new Date().toLocaleString();\r\n        const postComment = {\r\n            id: 4,\r\n            stock: this.state.ticker,\r\n            comment: this.state.comment,\r\n            user: 'Test User',\r\n            postDate: curTime\r\n        };\r\n        let allComments = this.state.comments;\r\n\r\n        axios.post('/api/comments', postComment)\r\n        .then(() => console.log('Comment created'))\r\n        .catch(err => {console.error(err);\r\n        });\r\n\r\n        allComments.push(postComment);\r\n        this.setState({comments: allComments});\r\n    }\r\n\r\n    getPolls(){\r\n        let html = [];\r\n        html.push(<h3>Polls</h3>);\r\n        html.push(<div>There are no polls.</div>);\r\n        return html;\r\n    }\r\n\r\n    getThreads(){\r\n        let html = [];\r\n        html.push(<h3>Threads</h3>);\r\n        html.push(<div>There are no threads.</div>);\r\n        return html;\r\n    }\r\n\r\n    setTab(tab) {\r\n        this.setState({\r\n            comTab: tab\r\n        });\r\n    }\r\n\r\n    getTab(){\r\n        let html = null;\r\n        switch(this.state.comTab){\r\n            case 'comments':\r\n                html = this.getComments();\r\n                break;\r\n            case 'polls':\r\n                html = this.getPolls();\r\n                break;\r\n            case 'threads':\r\n                html = this.getThreads();\r\n                break;\r\n        }\r\n        return html;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"header\">Enter a stock ticker below to access its data</div>\r\n                \r\n                <form onSubmit={this.handleSubmit} class=\"search\">\r\n                    <input type=\"text\" placeholder=\"Enter Ticker\" value={this.state.value} onChange={this.handleChange} class=\"search-bar\"/>\r\n                    <button type=\"submit\" class=\"search-button\">Search</button>\r\n                    <div class='search-suggestions'>\r\n                        {this.getSuggestions(4)}\r\n                    </div>\r\n                </form>\r\n\r\n                <div class=\"main-info\">\r\n                    <div class=\"info-header\">\r\n                        <div class = 'center'>\r\n                            <div class = \"info-header-item stock-name\">{this.state.name}</div>\r\n                            <div>{this.state.sector} / {this.state.industry} - {this.state.exchange}: {this.state.ticker}</div>\r\n                        </div>\r\n                        <div class = \"info-header-item\">{(this.state.price).toFixed(2) + \" \" + this.state.currency}<br /><a href=\"https://iexcloud.io\">Via IEX Cloud</a></div>\r\n                        <div class = \"info-header-item\">{(this.state.change).toFixed(2) + \" (\" + ((this.state.change) / this.state.price * 100).toFixed(2) + \"%) Past Day\"}</div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"stock\">\r\n                <Plot\r\n                    data={[\r\n                    {\r\n                        x: this.state.stockChartXValues,\r\n                        y: this.state.stockChartYValues,\r\n                        type: 'scatter',\r\n                        mode: 'lines',\r\n                        name: 'Price',\r\n                        marker: {color: 'lightgreen'}\r\n                    },\r\n                    {\r\n                        x: this.state.stockChartXValues,\r\n                        y: this.state.movingAverage,\r\n                        type: 'scatter',\r\n                        mode: 'lines',\r\n                        name: 'Moving Average (Short)',\r\n                        visible: 'legendonly',\r\n                        marker: {color: 'lightblue'},\r\n                        line: {shape: 'spline', dash: 'dashdot'}\r\n                    },\r\n                    {\r\n                        x: this.state.stockChartXValues,\r\n                        y: this.state.longMA,\r\n                        type: 'scatter',\r\n                        mode: 'lines',\r\n                        name: 'Moving Average (Long)',\r\n                        visible: 'legendonly',\r\n                        marker: {color: 'orange'},\r\n                        line: {shape: 'spline', dash: 'longdashdot'}\r\n                    }\r\n                    ]}\r\n                    layout={ \r\n                        {\r\n                            width: 800, \r\n                            height: 600, \r\n                            title: this.state.ticker,\r\n                            plot_bgcolor: 'black', \r\n                            paper_bgcolor: 'transparent',\r\n                            font: {color: 'white'},\r\n                            xaxis: {/*\r\n                                rangeselector: {buttons: [\r\n                                    {\r\n                                        count: 1,\r\n                                        label: '1D',\r\n                                        step: 'day',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {\r\n                                        count: 7,\r\n                                        label: '1W',\r\n                                        step: 'day',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {\r\n                                        count: 1,\r\n                                        label: '1M',\r\n                                        step: 'month',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {\r\n                                        count: 3,\r\n                                        label: '3M',\r\n                                        step: 'month',\r\n                                        stepmode: 'backward'\r\n                                    },\r\n                                    {\r\n                                        count: 1,\r\n                                        label: '1Y',\r\n                                        step: 'year',\r\n                                        stepmode: 'backward'\r\n                                    },\r\n                                    {step: 'all',\r\n                                    label: '5Y'\r\n                                    }\r\n                                ],\r\n                                font: {color: 'black'}},\r\n                               // rangeslider: {range: ['2015-02-17', '2020-08-19']}*/\r\n                            }\r\n                        } }\r\n                />\r\n                </div>\r\n                \r\n                <div class=\"time-scale\">\r\n                    <button onClick={() => { this.fetchStock(this.state.ticker.toUpperCase(), '1d', 1) }}>1D</button>\r\n                    <button onClick={() => { this.fetchStock(this.state.ticker.toUpperCase(), '5dm', 1) }}>5D</button>\r\n                    <button onClick={() => { this.fetchStock(this.state.ticker.toUpperCase(), '1m', 1) }}>1M</button>\r\n                    <button onClick={() => { this.fetchStock(this.state.ticker.toUpperCase(), '3m', 1) }}>3M</button>\r\n                    <button onClick={() => { this.fetchStock(this.state.ticker.toUpperCase(), '1y', 4) }}>1Y</button>\r\n                    <button onClick={() => { this.fetchStock(this.state.ticker.toUpperCase(), '5y', 20) }}>5Y</button>\r\n                </div>\r\n                \r\n                <div class=\"general-info\">\r\n                    <div class=\"sec-header\">General Information</div>\r\n                    <div class=\"sec-content\">\r\n                        <img src={\"https://storage.googleapis.com/iex/api/logos/\" + this.state.ticker + \".png\"} alt=\"logo\" height=\"100px\" />\r\n                        <div>\r\n                            <div>Website: <a href={this.state.website}>{this.state.website}</a></div>\r\n                            <div>CEO: <a href={\"https://www.google.com/search?q=\" + this.state.ceo}>{this.state.ceo}</a></div>\r\n                            <div>Address: <a href={\"https://www.google.com/maps/search/\" + this.state.address}>{this.state.address}</a></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"fundamentals\">\r\n                    <div class=\"sec-header\">Fundamentals</div>\r\n                    <div class=\"fundamental-container\">\r\n                        <div>\r\n                            <div class=\"fundamental-subheader\">General</div>\r\n                            <hr />\r\n                            <div class=\"tooltip\" style={this.capColor(this.state.marketCap)}>Market Cap: {this.getCapString(this.state.marketCap)}\r\n                            <span class=\"tooltiptext\">\r\n                                The total market capitalization of {this.state.name} is {this.getCapString(this.state.marketCap)} {this.state.currency}. Market cap is determined by the price per share multiplied by the number of shares outstanding. It is the true value of a stock, as opposed to it's share price. Useful for comparing. {this.capInfo(this.state.marketCap)}\r\n                            </span>\r\n                            </div>\r\n\r\n                            <br/>\r\n                                <div class=\"tooltip\">Volume: {this.getCapString(this.state.volume)}\r\n                            <span class=\"tooltiptext\">\r\n                                {this.getCapString(this.state.volume)} {this.state.name} stock has been traded on the most recent trading day.\r\n                            </span>\r\n                            </div>\r\n\r\n                            <br/>\r\n                                <div class=\"tooltip\">PE Ratio: {this.state.pe}\r\n                            <span class=\"tooltiptext\">\r\n                                (Price/Earnings Ratio) {this.state.name} stock is currently trading at a price {this.state.pe}x its profits.\r\n                            </span>\r\n                            </div>\r\n\r\n                            <br/>\r\n                                <div class=\"tooltip\">Year High: {this.state.yearHigh}\r\n                            <span class=\"tooltiptext\">\r\n                                The highest price {this.state.name} stock has been traded in the last year is ${this.state.yearHigh} {this.state.currency}.\r\n                            </span>\r\n                            </div>\r\n\r\n                            <br/>\r\n                                <div class=\"tooltip\">Year Low: {this.state.yearLow}\r\n                            <span class=\"tooltiptext\">\r\n                                The lowest price {this.state.name} stock has been traded in the last year is ${this.state.yearLow} {this.state.currency}.\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div class=\"fundamental-subheader\">Dividend</div>\r\n                            <hr />\r\n                            <div class=\"tooltip\" style={this.yieldColor(this.state.divYield)}>Yield: {(this.state.divYield * 100).toFixed(2)}%\r\n                            <span class=\"tooltiptext\">\r\n                                {this.state.name} shareholders will recieve a return of {(this.state.divYield * 100).toFixed(2)}% annually in the form of a dividend. Dividends are money given to shareholders per share as incentive to invest, often paid monthly or quarterly. {this.yieldInfo(this.state.divYield)}\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class = \"description\">{this.state.description}</div>\r\n                    \r\n                <div class=\"stock-community\">\r\n                        <div class=\"community-header\">\r\n                            <div>|</div>\r\n                            <button onClick={() => this.setTab('comments')}>Comments</button>\r\n                            <div>|</div>\r\n                            <button onClick={() => this.setTab('polls')}>Polls</button>\r\n                            <div>|</div>\r\n                            <button onClick={() => this.setTab('threads')}>Threads</button>\r\n                            <div>|</div>\r\n                        </div>\r\n                        <hr />\r\n                        {this.getTab()}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StockPage;","import React from 'react';\r\nimport '../css/Learn.css';\r\n\r\nclass LearnPage extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            basicDefinitions: ['Market Capitalization', 'Dividend Yield', 'P/E Ratio'],\r\n            tab: \"Stocks 101\"\r\n        }\r\n    }\r\n\r\n    setTab(name){\r\n        this.setState({\r\n            tab: name\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"main-header\">{this.state.tab}</div>\r\n                <div class=\"tab-container\">\r\n                    <button class=\"learn-tab\" onClick={() => {this.setTab(\"Stocks 101\")}}>Stocks 101</button>\r\n                    <button class=\"learn-tab\" onClick={() => {this.setTab(\"Definitions\")}}>Definitions</button>\r\n                    <button class=\"learn-tab\" onClick={() => {this.setTab(\"Helpful Videos\")}}>Helpful Videos</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LearnPage;","import React from 'react';\r\nimport '../css/News.css';\r\n\r\nlet rm = [false, false, false, false, false, false];\r\n\r\nclass NewsPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            urls: {\r\n                stockUrls: [],\r\n                hotUrls: []\r\n            },\r\n            titles: {\r\n                stockTitles: [],\r\n                hotTitles: []\r\n            },\r\n            descriptions: {\r\n                stockDescriptions: [],\r\n                hotDescriptions: []\r\n            },\r\n            images: {\r\n                stockImages: [],\r\n                hotImages: []\r\n            },\r\n            sources: {\r\n                stockSources: [],\r\n                hotSources: []\r\n            },\r\n            content: {\r\n                stockContent: [],\r\n                hotContent: []\r\n            },\r\n            searchTerm: \"Apple\",\r\n            searchSort: \"recent\",\r\n            stockPage: 1,\r\n            hotPage: 1\r\n        }\r\n        this.prevStockPage = this.prevStockPage.bind(this);\r\n        this.nextStockPage = this.nextStockPage.bind(this);\r\n        this.prevHotPage = this.prevHotPage.bind(this);\r\n        this.nextHotPage = this.nextHotPage.bind(this);\r\n        this.handleSort = this.handleSort.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    fetchNews(term,sort){\r\n        const API_KEY = 'a64cac56532741d6a55d4df44ee9e454';\r\n        let API_Call = 'http://newsapi.org/v2/everything?' +\r\n        'q=stock market&' +\r\n        'sortBy=recent&' +\r\n        'apiKey=' + API_KEY;\r\n        let API_Call2 = 'http://newsapi.org/v2/everything?' +\r\n        'q=' + term + '&' +\r\n        'sortBy=' + sort + '&' +\r\n        'apiKey=' + API_KEY;\r\n        let urlFunction = [];\r\n        let titleFunction = [];\r\n        let descriptionFunction = [];\r\n        let imageFunction = [];\r\n        let sourceFunction = [];\r\n        let contentFunction = [];\r\n        let hoturlFunction = [];\r\n        let hottitleFunction = [];\r\n        let hotdescriptionFunction = [];\r\n        let hotimageFunction = [];\r\n        let hotsourceFunction = [];\r\n        let hotContentFunction = [];\r\n        let pointerToThis = this;\r\n\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                console.log(data);\r\n                for(var key in data['articles']){\r\n                    urlFunction.push(data['articles'][key]['url']);\r\n                    titleFunction.push(data['articles'][key]['title']);\r\n                    descriptionFunction.push(data['articles'][key]['description']);\r\n                    imageFunction.push(data['articles'][key]['urlToImage']);\r\n                    sourceFunction.push(data['articles'][key]['source']['name']);\r\n                }\r\n            }\r\n        )\r\n        .then(\r\n            fetch(API_Call2)\r\n            .then(\r\n                function(response) {\r\n                    return response.json();\r\n                }\r\n            )\r\n            .then(\r\n                function(data) {\r\n                    console.log(data);\r\n                    for(var key in data['articles']){\r\n                        hoturlFunction.push(data['articles'][key]['url']);\r\n                        hottitleFunction.push(data['articles'][key]['title']);\r\n                        hotdescriptionFunction.push(data['articles'][key]['description']);\r\n                        hotimageFunction.push(data['articles'][key]['urlToImage']);\r\n                        hotsourceFunction.push(data['articles'][key]['source']['name']);\r\n                    }\r\n\r\n                    pointerToThis.setState({\r\n                        urls: {stockUrls: urlFunction, hotUrls: hoturlFunction},\r\n                        titles: {stockTitles: titleFunction, hotTitles: hottitleFunction},\r\n                        descriptions: {stockDescriptions: descriptionFunction, hotDescriptions: hotdescriptionFunction},\r\n                        images: {stockImages: imageFunction, hotImages: hotimageFunction},\r\n                        sources: {stockSources: sourceFunction, hotSources: hotsourceFunction}\r\n                    });\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    toggleRead(a){\r\n        rm[a] = !rm[a];\r\n        console.log(rm);\r\n    }\r\n\r\n    getRecentNews(q){\r\n        let articles = [];\r\n        for(let x = 0; x < q; x++){\r\n            let a = x + ((this.state.stockPage - 1) * 3);\r\n            if(rm[x]){\r\n                articles.push(\r\n                    <div class=\"article\">\r\n                        <img src={this.state.images.stockImages[a]} alt={this.state.images.stockImages[a]} class='thumbnail' height='128px' width='228px' />\r\n                        <div>\r\n                            <div class=\"news-title\">{this.state.titles.stockTitles[a]}</div>\r\n                            Source: <a href={this.state.urls.stockUrls[a]}>{this.state.sources.stockSources[a]}</a>\r\n                            <div>{this.state.descriptions.stockDescriptions[a]}</div>\r\n                            <button class='readmore' onClick={() => { this.toggleRead(x) }}>Read More</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                articles.push(\r\n                    <div class=\"article\">\r\n                        <img src={this.state.images.stockImages[a]} alt={this.state.images.stockImages[a]} class='thumbnail' height='128px' width='228px' />\r\n                        <div>\r\n                            <div class=\"news-title\">{this.state.titles.stockTitles[a]}</div>\r\n                            Source: <a href={this.state.urls.stockUrls[a]}>{this.state.sources.stockSources[a]}</a>\r\n                            <div>{this.state.descriptions.stockDescriptions[a]}</div>\r\n                            <button class='readmore' onClick={() => { this.toggleRead(x) }}>Read More</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return (articles);\r\n    }\r\n\r\n    getHotNews(q){\r\n        let articles = [];\r\n        for(let x = 0; x < q; x++){\r\n            let a = x + ((this.state.hotPage - 1) * 3);\r\n            articles.push(\r\n                <div class=\"article\">\r\n                    <img src={this.state.images.hotImages[a]} alt={this.state.images.hotImages[a]} class='thumbnail' height='128px' width='228px' />\r\n                    <div>\r\n                        <div class=\"news-title\">{this.state.titles.hotTitles[a]}</div>\r\n                        Source: <a href={this.state.urls.hotUrls[a]}>{this.state.sources.hotSources[a]}</a>\r\n                        <div>{this.state.descriptions.hotDescriptions[a]}</div>\r\n                        <button class='readmore'>Read More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (articles);\r\n    }\r\n\r\n    getOptions(){\r\n        let options = ['Alibaba','Amazon','AMD','Apple','Berkshire Hathaway','Beyond Meat','Cloudflare','Facebook','Google','Johnson and Johnson','JPMorgan','Mastercard','Microsoft','Netflix','Nvidia','Taiwan Semiconductor','Tesla','Visa','Walmart'];\r\n        let opthtml = [];\r\n        for(var o in options){\r\n            opthtml.push(<option>{options[o]}</option>);\r\n        }\r\n        return opthtml;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchNews(this.state.searchTerm + \" stock\", this.state.searchSort);\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.setState({searchTerm: event.target.value});\r\n    }\r\n\r\n    handleSort(event) {\r\n        this.setState({searchSort: event.target.value});\r\n        if(event.target.value == 'popular'){\r\n            this.setState({searchSort: 'popularity'});\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.fetchNews(this.state.searchTerm + \" stock\", this.state.searchSort);\r\n        this.setState({hotPage: 1});\r\n        event.preventDefault();\r\n    }\r\n\r\n    nextStockPage(){\r\n        let page = this.state.stockPage + 1;\r\n        this.setState({stockPage: page});\r\n    }\r\n\r\n    prevStockPage(){\r\n        let page = this.state.stockPage - 1;\r\n        this.setState({stockPage: page});\r\n    }\r\n    \r\n    nextHotPage(){\r\n        let page = this.state.hotPage + 1;\r\n        this.setState({hotPage: page});\r\n    }\r\n\r\n    prevHotPage(){\r\n        let page = this.state.hotPage - 1;\r\n        this.setState({hotPage: page});\r\n    }\r\n\r\n    printStockNav(){\r\n        let html = [];\r\n        if(this.state.stockPage > 1){\r\n            html.push(<button onClick={this.prevStockPage}>Prev</button>);\r\n        }\r\n        html.push(<span>Page {this.state.stockPage}</span>);\r\n        if(this.state.stockPage < 6){\r\n            html.push(<button onClick={this.nextStockPage}>Next</button>);\r\n        }\r\n        return html;\r\n    }\r\n\r\n    printHotNav(){\r\n        let html = [];\r\n        if(this.state.hotPage > 1){\r\n            html.push(<button onClick={this.prevHotPage}>Prev</button>);\r\n        }\r\n        html.push(<span>Page {this.state.hotPage}</span>);\r\n        if(this.state.hotPage < 6){\r\n            html.push(<button onClick={this.nextHotPage}>Next</button>);\r\n        }\r\n        return html;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"header\">Latest Stock Market News</div>\r\n                {this.getRecentNews(3)}\r\n                <div class=\"news-nav\">\r\n                    {this.printStockNav()}\r\n                </div>\r\n                <div class=\"header\">Hot Stocks</div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div class=\"news-search\">\r\n                        <span>Show me </span>\r\n                        <select class=\"choose\" onChange={this.handleSort}>\r\n                            <option>recent</option>\r\n                            <option>popular</option>\r\n                        </select>\r\n                        <span> news about </span>\r\n                        <select class=\"choose\" onChange={this.handleSearch} value={this.state.searchTerm}>\r\n                            {this.getOptions()}\r\n                        </select>\r\n                        <span> stock.</span>\r\n                        <button class=\"search-button\" type=\"submit\" style={{marginLeft:20}}>Search</button>\r\n                    </div>\r\n                </form>\r\n                {this.getHotNews(3)}\r\n                <div class=\"news-nav\">\r\n                    {this.printHotNav()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewsPage;","import React from 'react';\r\n\r\nclass CommunityPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>Community</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommunityPage;","import React from 'react';\r\n\r\nclass CompetePage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>Compete</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompetePage;","import React from 'react';\r\n\r\nclass AboutPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>About</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport '../css/Navbar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return(\r\n            <div class=\"navbar\">\r\n                <div class=\"navtitle\">Wyvern Stocks</div>\r\n                <ul>\r\n                    <li><Link to='/'>Home</Link></li>\r\n                    <li><Link to='/learn'>Learn</Link></li>\r\n                    <li><Link to='/stocks'>Stocks</Link></li>\r\n                    <li><Link to='/news'>News</Link></li>\r\n                    <li><Link to='/community'>Community</Link></li>\r\n                    <li><Link to='/compete'>Compete</Link></li>\r\n                    <li><Link to='/about'>About</Link></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport '../css/Home.css';\r\nimport Stock from './Stock';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return(\r\n        <div>\r\n            <div class=\"welcome\">\r\n                <div class=\"welcome-text\">\r\n                    Welcome to Wyvern Stocks. Your all-in-one hub for stock tracking, signals, learning, and community. Do your due dilligence on any stock fast and easy with our intuitive and free system.\r\n                    <br /><br />\r\n                    <button class=\"guide-button\">Sign Up</button>\r\n                </div>\r\n            </div>\r\n            <Stock/>\r\n            <div class=\"guide\">\r\n                <Link to='/learn'><button class=\"guide-button\">Learn</button></Link>\r\n                Expand your knowledege in the stock market\r\n                <Link to='/stocks'><br /><button class=\"guide-button\">Stocks</button></Link>\r\n                Browse the list of stocks and examine it's most important information\r\n                <Link to='/news'><br /><button class=\"guide-button\">News</button></Link>\r\n                Catch up on the latest news in the market\r\n                <Link to='/community'><br /><button class=\"guide-button\">Community</button></Link>\r\n                Chat with others about stocks, strategies, and speculation\r\n                <Link to='/compete'><br /><button class=\"guide-button\">Compete</button></Link>\r\n                Compete with others in a virtual stock trading game and put your skills to the test\r\n                <Link to='/about'><br /><button class=\"guide-button\">About</button></Link>\r\n                Learn more about the creator of Wyvern Stocks\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport Stock from './Stock';\nimport StockPage from './StockPage';\nimport LearnPage from './LearnPage';\nimport NewsPage from './NewsPage';\nimport CommunityPage from './CommunityPage';\nimport CompetePage from './CompetePage';\nimport AboutPage from './AboutPage';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport '../css/App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <a name=\"top\" />\n      <Navbar></Navbar>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/stocks\" component={StockPage}/>\n        <Route path=\"/learn\" component={LearnPage}/>\n        <Route path=\"/news\" component={NewsPage}/>\n        <Route path=\"/community\" component={CommunityPage}/>\n        <Route path=\"/compete\" component={CompetePage}/>\n        <Route path=\"/about\" component={AboutPage}/>\n      <div class=\"footer\">\n        <div>Created by Jake Briltz - 2020</div>\n        <a href=\"https://iexcloud.io\">Data provided by IEX Cloud</a>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/App';\nimport * as serviceWorker from './js/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}