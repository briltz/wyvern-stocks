{"version":3,"sources":["js/Stock.js","js/StockPage.js","js/LearnPage.js","js/NewsPage.js","js/CommunityPage.js","js/CompetePage.js","js/AboutPage.js","js/Navbar.js","js/Home.js","js/App.js","js/serviceWorker.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","Stock","props","state","stockChartXValues","stockChartYValues","ticker","this","fetchStock","pointerToThis","console","log","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","setState","class","x","y","type","mode","marker","color","opacity","layout","width","height","title","plot_bgcolor","paper_bgcolor","font","React","Component","StockPage","stockYHighs","stockYLows","search","name","exchange","description","industry","lastClose","secondLast","currency","marketCap","divYield","sector","image","handleChange","bind","handleSubmit","mc","style","capColor","yieldColor","toFixed","event","target","value","toUpperCase","preventDefault","tick","StockSymbol","API_Info_Call","stockYHighsFunction","stockYLowsFunction","stockName","stockExchange","stockDescription","stockIndustry","stockClose","closeBool","stockSecond","secondBool","stockCurrency","stockCap","stockYield","stockSector","onSubmit","placeholder","onChange","xaxis","rangeselector","buttons","count","label","step","stepmode","getCapString","capInfo","yieldInfo","LearnPage","basicDefinitions","rm","NewsPage","urls","stockUrls","hotUrls","titles","stockTitles","hotTitles","descriptions","stockDescriptions","hotDescriptions","images","stockImages","hotImages","sources","stockSources","hotSources","content","stockContent","hotContent","searchTerm","searchSort","stockPage","hotPage","prevStockPage","nextStockPage","prevHotPage","nextHotPage","handleSort","handleSearch","term","sort","API_KEY","API_Call2","urlFunction","titleFunction","descriptionFunction","imageFunction","sourceFunction","hoturlFunction","hottitleFunction","hotdescriptionFunction","hotimageFunction","hotsourceFunction","a","q","articles","src","alt","href","onClick","toggleRead","options","opthtml","o","fetchNews","page","html","getRecentNews","printStockNav","getOptions","marginLeft","getHotNews","printHotNav","CommunityPage","CompetePage","AboutPage","Navbar","to","Home","App","className","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b503eb58.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Stock.css';\r\nimport Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass Stock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stockChartXValues: [],\r\n            stockChartYValues: [],\r\n            ticker: 'TICKER'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchStock();\r\n    }\r\n\r\n    fetchStock() {\r\n        const pointerToThis = this;\r\n        console.log(pointerToThis);\r\n        const API_KEY = 'FBT0JJG7QAFALPC4';\r\n        let StockSymbol = 'SPY';\r\n        let API_Call = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=' + StockSymbol + '&outputsize=compact&apikey=' + API_KEY;\r\n        let stockChartXValuesFunction = [];\r\n        let stockChartYValuesFunction = [];\r\n\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                console.log(data);\r\n\r\n                for(var key in data['Time Series (Daily)']){\r\n                    stockChartXValuesFunction.push(key);\r\n                    stockChartYValuesFunction.push(data['Time Series (Daily)']\r\n                    [key]['4. close']);\r\n                }\r\n\r\n                pointerToThis.setState({\r\n                    stockChartXValues: stockChartXValuesFunction,\r\n                    stockChartYValues: stockChartYValuesFunction,\r\n                    ticker: 'S&P 500 (SPY Index)'\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"stock\">\r\n                <Plot\r\n                    data={[\r\n                    {\r\n                        x: this.state.stockChartXValues,\r\n                        y: this.state.stockChartYValues,\r\n                        type: 'scatter',\r\n                        mode: 'lines',\r\n                        marker: {color: 'lightgreen', opacity: 0.5}\r\n                    },\r\n                    ]}\r\n                    layout={ \r\n                        {\r\n                            width: 720, \r\n                            height: 440, \r\n                            title: this.state.ticker, \r\n                            plot_bgcolor: 'black', \r\n                            paper_bgcolor: 'black',\r\n                            font: {color: 'white'}\r\n                        } }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stock;","import React from 'react';\r\nimport '../css/Stock.css';\r\nimport Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass StockPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stockChartXValues: [],\r\n            stockChartYValues: [],\r\n            stockYHighs: [],\r\n            stockYLows: [],\r\n            ticker: '',\r\n            search: '',\r\n            name: '',\r\n            exchange: '',\r\n            description: '',\r\n            industry: '',\r\n            lastClose: 0,\r\n            secondLast: 0,\r\n            currency: '',\r\n            marketCap: 0,\r\n            divYield: 0,\r\n            sector: '',\r\n            image: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    yieldColor(y){\r\n        if(y*100 == 0){\r\n            return({color: 'red'});\r\n        }\r\n        else if(y*100 > 5){\r\n            return({color: 'fuchsia'});\r\n        }\r\n        else if(y*100 < 3){\r\n            return({color: 'yellow'});\r\n        }\r\n        else{\r\n            return({color: 'lightgreen'});\r\n        }\r\n    }\r\n\r\n    capColor(mc){\r\n        if (mc>1000000000000){\r\n            return({color: 'orange'});\r\n        }\r\n        else if (mc>1000000000){\r\n            return({color: 'fuchsia'});\r\n        }\r\n        else if(mc>1000000){\r\n            return({color: 'lightgreen'});\r\n        }\r\n        else if(mc > 1000){\r\n            return({color: 'red'});\r\n        }\r\n        else{\r\n            return({color: 'white'});\r\n        }\r\n    }\r\n\r\n    capInfo(mc){\r\n        if (mc>1000000000000){\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap over One Trillion. This is a sign of long-term stability and a well established company, however not as much room to grow.</div>);\r\n        }\r\n        else if (mc>1000000000){\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap over One Billion. This is a sign of good stability, and possibly high growth potential.</div>);\r\n        }\r\n        else if(mc>1000000){\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap over One Million. This may imply the company is smaller with higher volatility, however there is lots of room to grow.</div>);\r\n        }\r\n        else if(mc > 1000){\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap over One Thousand. This implies high volatility, and likely low volume. This particular stock is probably a very risky buy.</div>);\r\n        }\r\n        else{\r\n            return(<div style={this.capColor(mc)}><br />This stock has a market cap under One Thousand. There is either not enough data to properly determine it's market cap, or this particular stock is valued worthless.</div>);\r\n        }\r\n    }\r\n\r\n    yieldInfo(y){\r\n        if(y*100 == 0){\r\n            return(<div style={this.yieldColor(y)}><br />This stock does not pay a dividend.</div>);\r\n        }\r\n        else if(y*100 > 5){\r\n            return(<div style={this.yieldColor(y)}><br />This stock pays a large dividend. This may seem good, but is sometimes not a good sign! Take a look into the company financials to ensure it's earnings are stable.</div>);\r\n        }\r\n        else if(y*100 < 2.5){\r\n            return(<div style={this.yieldColor(y)}><br />This stock pays a fair dividend. Usually safer for long-term holds, however it is on the lower end of dividend return.</div>);\r\n        }\r\n        else{\r\n            return(<div style={this.yieldColor(y)}><br />This stock pays a good dividend. The yield is in the ideal range for a dividend-focused security.</div>);\r\n        }\r\n    }\r\n\r\n    getCapString(mc){\r\n        if (mc>1000000000000){\r\n            return((mc/1000000000000).toFixed(2) + \"T\");\r\n        }\r\n        else if (mc>1000000000){\r\n            return((mc/1000000000).toFixed(2) + \"B\");\r\n        }\r\n        else if(mc>1000000){\r\n            return((mc/1000000).toFixed(2) + \"M\");\r\n        }\r\n        else if(mc > 1000){\r\n            return((mc/1000).toFixed(2) + \"K\");\r\n        }\r\n        else{\r\n            return(mc);\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({search: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        this.fetchStock(this.state.search.toUpperCase());\r\n        event.preventDefault();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchStock('AAPL');\r\n    }\r\n\r\n    fetchStock(tick) {\r\n        const pointerToThis = this;\r\n        const API_KEY = 'FBT0JJG7QAFALPC4';\r\n        const API_KEY2 = 'E9DOOT4M5JRK14BN';\r\n        let StockSymbol = tick;\r\n        let API_Call = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=' + StockSymbol + '&outputsize=full&apikey=' + API_KEY;\r\n        let API_Info_Call = 'https://www.alphavantage.co/query?function=OVERVIEW&symbol=' + StockSymbol + '&apikey=' + API_KEY2;\r\n        let stockChartXValuesFunction = [];\r\n        let stockChartYValuesFunction = [];\r\n        let stockYHighsFunction = [];\r\n        let stockYLowsFunction = [];\r\n        let stockName = '';\r\n        let stockExchange = '';\r\n        let stockDescription = '';\r\n        let stockIndustry = '';\r\n        let stockClose = 0;\r\n        let closeBool = false;\r\n        let stockSecond = 0;\r\n        let secondBool = false;\r\n        let stockCurrency = '';\r\n        let stockCap = 0;\r\n        let stockYield = 0;\r\n        let stockSector = '';\r\n\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                closeBool = false;\r\n                for(var key in data['Time Series (Daily)']){\r\n                    stockChartXValuesFunction.push(key);\r\n                    stockChartYValuesFunction.push(data['Time Series (Daily)']\r\n                    [key]['4. close']);\r\n                    stockYHighsFunction.push(data['Time Series (Daily)']\r\n                    [key]['2. high']);\r\n                    stockYLowsFunction.push(data['Time Series (Daily)']\r\n                    [key]['3. low']);\r\n                    if(secondBool){\r\n                        stockSecond = data['Time Series (Daily)'][key]['4. close'];\r\n                        secondBool = false;\r\n                    }\r\n                    if(!closeBool){\r\n                        stockClose = data['Time Series (Daily)'][key]['4. close'];\r\n                        closeBool = true;\r\n                        secondBool = true;\r\n                    }\r\n                }\r\n\r\n                pointerToThis.setState({\r\n                    stockChartXValues: stockChartXValuesFunction,\r\n                    stockChartYValues: stockChartYValuesFunction,\r\n                    ticker: StockSymbol,\r\n                    lastClose : stockClose,\r\n                    secondLast: stockSecond,\r\n                    stockYHighs: stockYHighsFunction,\r\n                    stockYLows: stockYLowsFunction\r\n                });\r\n            }\r\n        )\r\n\r\n        fetch(API_Info_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                console.log(data);\r\n\r\n                stockName = data['Name'];\r\n                stockExchange = data['Exchange'];\r\n                stockDescription = data['Description'];\r\n                stockIndustry = data['Industry'];\r\n                stockCurrency = data['Currency'];\r\n                stockCap = data['MarketCapitalization'];\r\n                stockYield = data['DividendYield'];\r\n                stockSector = data['Sector'];\r\n\r\n                pointerToThis.setState({\r\n                    name: stockName,\r\n                    exchange: stockExchange,\r\n                    description: stockDescription,\r\n                    industry: stockIndustry,\r\n                    currency: stockCurrency,\r\n                    marketCap: stockCap,\r\n                    divYield: stockYield,\r\n                    sector: stockSector\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"header\">Enter a stock ticker below to access it's data</div>\r\n                <form onSubmit={this.handleSubmit} class=\"search\">\r\n                    <input type=\"text\" placeholder=\"Enter Ticker\" value={this.state.value} onChange={this.handleChange} class=\"search-bar\"/>\r\n                    <button type=\"submit\" class=\"search-button\">Search</button>\r\n                </form>\r\n                <div class=\"main-info\">\r\n                    <div class=\"info-header\">\r\n                        <div class = 'center'>\r\n                            <div class = \"info-header-item stock-name\">{this.state.name}</div>\r\n                            <div>{this.state.sector} / {this.state.industry} - {this.state.exchange}: {this.state.ticker}</div>\r\n                        </div>\r\n                        <div class = \"info-header-item\">{(this.state.lastClose+1-1+1).toFixed(2) + \" \" + this.state.currency}</div>\r\n                        <div class = \"info-header-item\">{(this.state.lastClose - this.state.secondLast).toFixed(2) + \" (\" + ((this.state.lastClose - this.state.secondLast) / this.state.lastClose * 100).toFixed(2) + \"%) Past Day\"}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"stock\">\r\n                <Plot\r\n                    data={[\r\n                    {\r\n                        x: this.state.stockChartXValues,\r\n                        y: this.state.stockChartYValues,\r\n                        type: 'scatter',\r\n                        mode: 'lines',\r\n                        marker: {color: 'lightgreen'}\r\n                    },\r\n                    ]}\r\n                    layout={ \r\n                        {\r\n                            width: 800, \r\n                            height: 600, \r\n                            title: this.state.ticker, \r\n                            plot_bgcolor: 'black', \r\n                            paper_bgcolor: 'black',\r\n                            font: {color: 'white'},\r\n                            xaxis: {\r\n                                rangeselector: {buttons: [\r\n                                    {\r\n                                        count: 1,\r\n                                        label: '1D',\r\n                                        step: 'day',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {\r\n                                        count: 7,\r\n                                        label: '1W',\r\n                                        step: 'day',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {\r\n                                        count: 1,\r\n                                        label: '1M',\r\n                                        step: 'month',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {\r\n                                        count: 3,\r\n                                        label: '3M',\r\n                                        step: 'month',\r\n                                        stepmode: 'backward'\r\n                                    },\r\n                                    {\r\n                                        count: 1,\r\n                                        label: '1Y',\r\n                                        step: 'year',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {\r\n                                        count: 5,\r\n                                        label: '5Y',\r\n                                        step: 'year',\r\n                                        stepmode: 'backward',\r\n                                    },\r\n                                    {step: 'all'}\r\n                                ],\r\n                                font: {color: 'black'}},\r\n                               // rangeslider: {range: ['2015-02-17', '2020-08-19']}\r\n                            }\r\n                        } }\r\n                />\r\n                <br />\r\n                </div>\r\n                    <div class=\"fundamentals\">\r\n                    <div class=\"tooltip\" style={this.capColor(this.state.marketCap)}>Market Cap: {this.getCapString(this.state.marketCap)}\r\n                    <span class=\"tooltiptext\">\r\n                        The total market capitalization of {this.state.name} is {this.getCapString(this.state.marketCap)} {this.state.currency}. Market cap is determined by the price per share multiplied by the number of shares outstanding. It is the true value of a stock, as opposed to it's share price. Useful for comparing. {this.capInfo(this.state.marketCap)}\r\n                    </span>\r\n                    </div>\r\n                    <br/>\r\n                        <div class=\"tooltip\" style={this.yieldColor(this.state.divYield)}>Yield: {(this.state.divYield * 100).toFixed(2)}%\r\n                    <span class=\"tooltiptext\">\r\n                        {this.state.name} shareholders will recieve a return of {(this.state.divYield * 100).toFixed(2)}% annually in the form of a dividend. Dividends are money given to shareholders per share as incentive to invest, often paid monthly or quarterly. {this.yieldInfo(this.state.divYield)}\r\n                    </span>\r\n                    </div>\r\n                    </div>\r\n                    <div class = \"description\">{this.state.description}</div>\r\n                    <div class=\"stock-community\">\r\n                        <div class=\"community-header\">\r\n                            <div>|</div>\r\n                            <button>Comments</button>\r\n                            <div>|</div>\r\n                            <button>Polls</button>\r\n                            <div>|</div>\r\n                            <button>Threads</button>\r\n                            <div>|</div>\r\n                        </div>\r\n                        <hr />\r\n                        There are no comments on this stock yet.\r\n                        <button class=\"guide-button\">Comment</button>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StockPage;","import React from 'react';\r\nimport '../css/Learn.css';\r\n\r\nclass LearnPage extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            basicDefinitions: ['Market Capitalization', 'Dividend Yield', 'P/E Ratio']\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"main-header\">Learn</div>\r\n                <button>Stocks 101</button>\r\n                <button>Definitions</button>\r\n                <button>Helpful Videos</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LearnPage;","import React from 'react';\r\nimport '../css/News.css';\r\n\r\nlet rm = [false, false, false, false, false, false];\r\n\r\nclass NewsPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            urls: {\r\n                stockUrls: [],\r\n                hotUrls: []\r\n            },\r\n            titles: {\r\n                stockTitles: [],\r\n                hotTitles: []\r\n            },\r\n            descriptions: {\r\n                stockDescriptions: [],\r\n                hotDescriptions: []\r\n            },\r\n            images: {\r\n                stockImages: [],\r\n                hotImages: []\r\n            },\r\n            sources: {\r\n                stockSources: [],\r\n                hotSources: []\r\n            },\r\n            content: {\r\n                stockContent: [],\r\n                hotContent: []\r\n            },\r\n            searchTerm: \"Apple\",\r\n            searchSort: \"recent\",\r\n            stockPage: 1,\r\n            hotPage: 1\r\n        }\r\n        this.prevStockPage = this.prevStockPage.bind(this);\r\n        this.nextStockPage = this.nextStockPage.bind(this);\r\n        this.prevHotPage = this.prevHotPage.bind(this);\r\n        this.nextHotPage = this.nextHotPage.bind(this);\r\n        this.handleSort = this.handleSort.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    fetchNews(term,sort){\r\n        const API_KEY = 'a64cac56532741d6a55d4df44ee9e454';\r\n        let API_Call = 'http://newsapi.org/v2/everything?' +\r\n        'q=stock market&' +\r\n        'sortBy=recent&' +\r\n        'apiKey=' + API_KEY;\r\n        let API_Call2 = 'http://newsapi.org/v2/everything?' +\r\n        'q=' + term + '&' +\r\n        'sortBy=' + sort + '&' +\r\n        'apiKey=' + API_KEY;\r\n        let urlFunction = [];\r\n        let titleFunction = [];\r\n        let descriptionFunction = [];\r\n        let imageFunction = [];\r\n        let sourceFunction = [];\r\n        let contentFunction = [];\r\n        let hoturlFunction = [];\r\n        let hottitleFunction = [];\r\n        let hotdescriptionFunction = [];\r\n        let hotimageFunction = [];\r\n        let hotsourceFunction = [];\r\n        let hotContentFunction = [];\r\n        let pointerToThis = this;\r\n\r\n        fetch(API_Call)\r\n        .then(\r\n            function(response) {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            function(data) {\r\n                console.log(data);\r\n                for(var key in data['articles']){\r\n                    urlFunction.push(data['articles'][key]['url']);\r\n                    titleFunction.push(data['articles'][key]['title']);\r\n                    descriptionFunction.push(data['articles'][key]['description']);\r\n                    imageFunction.push(data['articles'][key]['urlToImage']);\r\n                    sourceFunction.push(data['articles'][key]['source']['name']);\r\n                }\r\n            }\r\n        )\r\n        .then(\r\n            fetch(API_Call2)\r\n            .then(\r\n                function(response) {\r\n                    return response.json();\r\n                }\r\n            )\r\n            .then(\r\n                function(data) {\r\n                    console.log(data);\r\n                    for(var key in data['articles']){\r\n                        hoturlFunction.push(data['articles'][key]['url']);\r\n                        hottitleFunction.push(data['articles'][key]['title']);\r\n                        hotdescriptionFunction.push(data['articles'][key]['description']);\r\n                        hotimageFunction.push(data['articles'][key]['urlToImage']);\r\n                        hotsourceFunction.push(data['articles'][key]['source']['name']);\r\n                    }\r\n\r\n                    pointerToThis.setState({\r\n                        urls: {stockUrls: urlFunction, hotUrls: hoturlFunction},\r\n                        titles: {stockTitles: titleFunction, hotTitles: hottitleFunction},\r\n                        descriptions: {stockDescriptions: descriptionFunction, hotDescriptions: hotdescriptionFunction},\r\n                        images: {stockImages: imageFunction, hotImages: hotimageFunction},\r\n                        sources: {stockSources: sourceFunction, hotSources: hotsourceFunction}\r\n                    });\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    toggleRead(a){\r\n        rm[a] = !rm[a];\r\n        console.log(rm);\r\n    }\r\n\r\n    getRecentNews(q){\r\n        let articles = [];\r\n        for(let x = 0; x < q; x++){\r\n            let a = x + ((this.state.stockPage - 1) * 3);\r\n            if(rm[x]){\r\n                articles.push(\r\n                    <div class=\"article\">\r\n                        <img src={this.state.images.stockImages[a]} alt={this.state.images.stockImages[a]} class='thumbnail' height='128px' width='228px' />\r\n                        <div>\r\n                            <div class=\"news-title\">{this.state.titles.stockTitles[a]}</div>\r\n                            Source: <a href={this.state.urls.stockUrls[a]}>{this.state.sources.stockSources[a]}</a>\r\n                            <div>{this.state.descriptions.stockDescriptions[a]}</div>\r\n                            <button class='readmore' onClick={() => { this.toggleRead(x) }}>Read More</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                articles.push(\r\n                    <div class=\"article\">\r\n                        <img src={this.state.images.stockImages[a]} alt={this.state.images.stockImages[a]} class='thumbnail' height='128px' width='228px' />\r\n                        <div>\r\n                            <div class=\"news-title\">{this.state.titles.stockTitles[a]}</div>\r\n                            Source: <a href={this.state.urls.stockUrls[a]}>{this.state.sources.stockSources[a]}</a>\r\n                            <div>{this.state.descriptions.stockDescriptions[a]}</div>\r\n                            <button class='readmore' onClick={() => { this.toggleRead(x) }}>Read More</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return (articles);\r\n    }\r\n\r\n    getHotNews(q){\r\n        let articles = [];\r\n        for(let x = 0; x < q; x++){\r\n            let a = x + ((this.state.hotPage - 1) * 3);\r\n            articles.push(\r\n                <div class=\"article\">\r\n                    <img src={this.state.images.hotImages[a]} alt={this.state.images.hotImages[a]} class='thumbnail' height='128px' width='228px' />\r\n                    <div>\r\n                        <div class=\"news-title\">{this.state.titles.hotTitles[a]}</div>\r\n                        Source: <a href={this.state.urls.hotUrls[a]}>{this.state.sources.hotSources[a]}</a>\r\n                        <div>{this.state.descriptions.hotDescriptions[a]}</div>\r\n                        <button class='readmore'>Read More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (articles);\r\n    }\r\n\r\n    getOptions(){\r\n        let options = ['Alibaba','Amazon','AMD','Apple','Berkshire Hathaway','Beyond Meat','Cloudflare','Facebook','Google','Johnson and Johnson','JPMorgan','Mastercard','Microsoft','Netflix','Nvidia','Taiwan Semiconductor','Tesla','Visa','Walmart'];\r\n        let opthtml = [];\r\n        for(var o in options){\r\n            opthtml.push(<option>{options[o]}</option>);\r\n        }\r\n        return opthtml;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchNews(this.state.searchTerm + \" stock\", this.state.searchSort);\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.setState({searchTerm: event.target.value});\r\n    }\r\n\r\n    handleSort(event) {\r\n        this.setState({searchSort: event.target.value});\r\n        if(event.target.value == 'popular'){\r\n            this.setState({searchSort: 'popularity'});\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.fetchNews(this.state.searchTerm + \" stock\", this.state.searchSort);\r\n        this.setState({hotPage: 1});\r\n        event.preventDefault();\r\n    }\r\n\r\n    nextStockPage(){\r\n        let page = this.state.stockPage + 1;\r\n        this.setState({stockPage: page});\r\n    }\r\n\r\n    prevStockPage(){\r\n        let page = this.state.stockPage - 1;\r\n        this.setState({stockPage: page});\r\n    }\r\n    \r\n    nextHotPage(){\r\n        let page = this.state.hotPage + 1;\r\n        this.setState({hotPage: page});\r\n    }\r\n\r\n    prevHotPage(){\r\n        let page = this.state.hotPage - 1;\r\n        this.setState({hotPage: page});\r\n    }\r\n\r\n    printStockNav(){\r\n        let html = [];\r\n        if(this.state.stockPage > 1){\r\n            html.push(<button onClick={this.prevStockPage}>Prev</button>);\r\n        }\r\n        html.push(<span>Page {this.state.stockPage}</span>);\r\n        if(this.state.stockPage < 6){\r\n            html.push(<button onClick={this.nextStockPage}>Next</button>);\r\n        }\r\n        return html;\r\n    }\r\n\r\n    printHotNav(){\r\n        let html = [];\r\n        if(this.state.hotPage > 1){\r\n            html.push(<button onClick={this.prevHotPage}>Prev</button>);\r\n        }\r\n        html.push(<span>Page {this.state.hotPage}</span>);\r\n        if(this.state.hotPage < 6){\r\n            html.push(<button onClick={this.nextHotPage}>Next</button>);\r\n        }\r\n        return html;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"header\">Latest Stock Market News</div>\r\n                {this.getRecentNews(3)}\r\n                <div class=\"news-nav\">\r\n                    {this.printStockNav()}\r\n                </div>\r\n                <div class=\"header\">Hot Stocks</div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div class=\"news-search\">\r\n                        <span>Show me </span>\r\n                        <select class=\"choose\" onChange={this.handleSort}>\r\n                            <option>recent</option>\r\n                            <option>popular</option>\r\n                        </select>\r\n                        <span> news about </span>\r\n                        <select class=\"choose\" onChange={this.handleSearch} value={this.state.searchTerm}>\r\n                            {this.getOptions()}\r\n                        </select>\r\n                        <span> stock.</span>\r\n                        <button class=\"search-button\" type=\"submit\" style={{marginLeft:20}}>Search</button>\r\n                    </div>\r\n                </form>\r\n                {this.getHotNews(3)}\r\n                <div class=\"news-nav\">\r\n                    {this.printHotNav()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewsPage;","import React from 'react';\r\n\r\nclass CommunityPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>Community</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommunityPage;","import React from 'react';\r\n\r\nclass CompetePage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>Compete</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompetePage;","import React from 'react';\r\n\r\nclass AboutPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>About</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport '../css/Navbar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return(\r\n            <div class=\"navbar\">\r\n                <div class=\"navtitle\">Wyvern Stocks</div>\r\n                <ul>\r\n                    <li><Link to='/'>Home</Link></li>\r\n                    <li><Link to='/learn'>Learn</Link></li>\r\n                    <li><Link to='/stocks'>Stocks</Link></li>\r\n                    <li><Link to='/news'>News</Link></li>\r\n                    <li><Link to='/community'>Community</Link></li>\r\n                    <li><Link to='/compete'>Compete</Link></li>\r\n                    <li><Link to='/about'>About</Link></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport '../css/Home.css';\r\nimport Stock from './Stock';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return(\r\n        <div>\r\n            <div class=\"welcome\">Welcome to Wyvern Stocks! Your all-in-one hub for stock tracking, signals, learning, and community. Do your due dilligence on any stock fast and easy with our intuitive and free system.</div>\r\n            <Stock/>\r\n            <div class=\"guide\">\r\n                <Link to='/learn'><button class=\"guide-button\">Learn</button></Link>\r\n                Expand your knowledege in the stock market\r\n                <Link to='/stocks'><br /><button class=\"guide-button\">Stocks</button></Link>\r\n                Browse the list of stocks and examine it's most important information\r\n                <Link to='/news'><br /><button class=\"guide-button\">News</button></Link>\r\n                Catch up on the latest news in the market\r\n                <Link to='/community'><br /><button class=\"guide-button\">Community</button></Link>\r\n                Chat with others about stocks, strategies, and speculation\r\n                <Link to='/compete'><br /><button class=\"guide-button\">Compete</button></Link>\r\n                Compete with others in a virtual stock trading game and put your skills to the test\r\n                <Link to='/about'><br /><button class=\"guide-button\">About</button></Link>\r\n                Learn more about the creator of Wyvern Stocks\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport Stock from './Stock';\nimport StockPage from './StockPage';\nimport LearnPage from './LearnPage';\nimport NewsPage from './NewsPage';\nimport CommunityPage from './CommunityPage';\nimport CompetePage from './CompetePage';\nimport AboutPage from './AboutPage';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport '../css/App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <a name=\"top\" />\n      <Navbar></Navbar>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/stocks\" component={StockPage}/>\n        <Route path=\"/learn\" component={LearnPage}/>\n        <Route path=\"/news\" component={NewsPage}/>\n        <Route path=\"/community\" component={CommunityPage}/>\n        <Route path=\"/compete\" component={CompetePage}/>\n        <Route path=\"/about\" component={AboutPage}/>\n      </Switch>\n      <div class=\"top\"><a href=\"#top\">Back to top</a></div>\n      <div class=\"footer\">\n        <div>Created by Jake Briltz - 2020</div>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/App';\nimport * as serviceWorker from './js/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}